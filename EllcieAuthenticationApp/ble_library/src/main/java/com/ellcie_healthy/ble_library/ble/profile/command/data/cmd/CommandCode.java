package com.ellcie_healthy.ble_library.ble.profile.command.data.cmd;

import androidx.annotation.NonNull;

public enum CommandCode {
    COMMAND_GET_DEVICE_SERIAL_NUMBER(0x13),
    COMMAND_GET_DEVICE_BT_ADDR(0x14),
    COMMAND_GET_DEVICE_NAME_FACTORY(0x15),
    COMMAND_SET_DEVICE_MODEL(0x16),
    COMMAND_GET_DEVICE_MODEL(0x17),
    COMMAND_SET_DEVICE_NAME(0x18),
    COMMAND_GET_DEVICE_NAME(0x19),
    COMMAND_GET_DEVICE_GAUGE_UID(0x1A),
    COMMAND_GET_DEVICE_FIRWMARE_VERSION(0x1B),
    COMMAND_GET_DEVICE_BT_FIRWMARE_VERSION(0x1C),
    COMMAND_GET_DEVICE_BATTERY_VOLTAGE(0x1D),
    COMMAND_SET_SHAKE_ONLY(0x1F),

    COMMAND_SET_DEVICE_LED(0x20),
    COMMAND_SET_DEVICE_BUZZER(0x21),
    COMMAND_GET_BATTERY_LEVEL(0x22),
    COMMAND_GET_DEVICE_TEMPERATURE(0x23),
    COMMAND_GET_DEVICE_HUMIDITY(0x24),
    COMMAND_GET_DEVICE_PRESSURE(0x25),
    COMMAND_GET_DEVICE_LUMINOSITY(0x26),
    COMMAND_GET_DEVICE_PROXIMITY(0x27),

    COMMAND_TEST_DEVICE_ACCELEROMETER(0x28),
    COMMAND_TEST_DEVICE_GYROSCOPE(0x29),
    COMMAND_TEST_DEVICE_POGO(0x2A),
    COMMAND_TEST_DEVICE_ENABLE_UART(0x2C),
    COMMAND_TEST_DEVICE_SI1153(0x2D),

    COMMAND_PERSIST_CONFIG_IN_FLASH(0x30),

    COMMAND_INCOMING_CALL(0xA1),
    COMMAND_INCOMING_SMS(0xA2),
    COMMAND_FIND_MY_GLASSES(0xA3),
    COMMAND_RESET_CALIBRATION_DATA(0xA4),
    COMMAND_SET_CURRENT_USER(0xA5),

    COMMAND_GET_LOG(0xB2),
    COMMAND_SET_ALARM_VOLUME(0xB3),
    COMMAND_SET_NOTIF_VOLUME(0xB4),
    COMMAND_SET_ALARM_LUMINOSITY(0xB5),
    COMMAND_SET_NOTIF_LUMINOSITY(0xB6),
    COMMAND_GET_SET_SILENT_MODE(0xB7),
    COMMAND_SET_TRIP_STATUS(0xB8),
    COMMAND_GET_TRIP_STATUS(0xB9),
    COMMAND_SET_TIMESTAMP(0xBA),
    COMMAND_SET_FULL_CONFIG(0xBF),

    COMMAND_BEST_MEAN(0xBB),

    COMMAND_SHUTDOWN_DEVICE(0xC0),
    COMMAND_GET_DEVICE_STATE(0xCE),
    COMMAND_GET_DIAGNOSTIC(0xCF),

    COMMAND_STREET_LAB_MUTE_ALARM(0xD0),
    COMMAND_STREET_LAB_UNMUTE_ALARM(0xD1),
    COMMAND_STREET_LAB_GENERATE_ALARM(0xD2),
    COMMAND_DEBUG_GENERATE_TRIP_RISK(0xD3),
    COMMAND_DEBUG_SELECT_SUPPLY(0xD4),
    COMMAND_DEBUG_ENABLE_LEFT_LP5562(0xD5),
    COMMAND_DEBUG_ENABLE_BLINK_DETECT_SND(0xD6),
    COMMAND_DEBUG_DISABLE_ALGO(0xD7),

    COMMAND_DATA_STREAMING_CONTROL(0xDF),
    COMMAND_DATA_DEBUG_CONTROL(0xDC),
    COMMAND_SET_ALWAYS_WARNING(0xDD),
    COMMAND_SET_ALLOW_TRIP_IN_CHARGE(0xDE),

    COMMAND_OPENLAB_EXTENSION_COMMANDS(0xEC),

    COMMAND_FALL_DATA_GATHERING(0xF5),
    COMMAND_FALL_PREVENTION(0xF6),
    COMMAND_GET_FALL_STATUS(0xF9),
    COMMAND_FALL_COMMANDS(0xFA),
    COMMAND_FALL_CONFIG(0xFC),

    COMMAND_OPTICIAN_TEST(0xCD),
    COMMAND_START_OPTICIAN(0x01);

    private final int code;

    CommandCode(int c) {
        code = c;
    }

    public static CommandCode valueOf(int value) {
        for (CommandCode e : values()) {
            if ((byte) e.code == (byte) value) {
                return e;
            }
        }
        return null;
    }

    @NonNull
    @Override
    public String toString() {
        return super.toString() + " (" + String.format("0x%02X", (byte) code) + ")";
    }

    public final byte getCode() {
        return (byte) code;
    }
}
